{
	"info": {
		"_postman_id": "57894e0b-cdfa-4587-9571-55192de4ce9c",
		"name": "QA Demo - SL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Accounts - Books",
			"item": [
				{
					"name": "1-User Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.globals.set(\"userID\", jsonData.userID);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const username = pm.variables.replaceIn('{{$randomUserName}}');",
									"",
									"const password = pm.variables.replaceIn('Sloaisiga18$');",
									"pm.globals.set(\"userName\", username);",
									"pm.globals.set(\"password\", password);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"{{userName}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/Account/v1/User",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"Account",
								"v1",
								"User"
							]
						}
					},
					"response": [
						{
							"name": "1-User Account",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userName\": \"{{userName}}\",\n  \"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/Account/v1/User",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"Account",
										"v1",
										"User"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.17.10 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Fri, 28 Jan 2022 19:25:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "230"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "ETag",
									"value": "W/\"e6-Suxub+fxI99/3YEWz5cjyd3KlvQ\""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": \"1300\",\n    \"message\": \"Passwords must have at least one non alphanumeric character, one digit ('0'-'9'), one uppercase ('A'-'Z'), one lowercase ('a'-'z'), one special character and Password must be eight characters or longer.\"\n}"
						}
					]
				},
				{
					"name": "1.1-User Authorize",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.globals.set(\"accessToken\", jsonData.token);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"{{userName}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/Account/v1/GenerateToken",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"Account",
								"v1",
								"GenerateToken"
							]
						}
					},
					"response": [
						{
							"name": "1-User Account",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userName\": \"{{userName}}\",\n  \"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/Account/v1/User",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"Account",
										"v1",
										"User"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.17.10 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Fri, 28 Jan 2022 19:25:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "230"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "ETag",
									"value": "W/\"e6-Suxub+fxI99/3YEWz5cjyd3KlvQ\""
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": \"1300\",\n    \"message\": \"Passwords must have at least one non alphanumeric character, one digit ('0'-'9'), one uppercase ('A'-'Z'), one lowercase ('a'-'z'), one special character and Password must be eight characters or longer.\"\n}"
						}
					]
				},
				{
					"name": "2-User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/Account/v1/User/{{userID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"Account",
								"v1",
								"User",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3- Get all Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.globals.set(\"ISBN\", jsonData.books[0].isbn);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const username = pm.variables.replaceIn('{{$randomUserName}}');",
									"",
									"const password = pm.variables.replaceIn('Sloaisiga18$');",
									"pm.globals.set(\"userName\", username);",
									"pm.globals.set(\"password\", password);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"{{userName}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/BookStore/v1/Books",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"BookStore",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "4-User add book to Collection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"{{userID}}\",\n  \"collectionOfIsbns\": [\n    {\n      \"isbn\": \"{{ISBN}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/BookStore/v1/Books",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"BookStore",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "5-User remove book from Collection Copy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"{{userID}}\",\n  \"isbn\": \"{{ISBN}}\"\n   \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/BookStore/v1/Book",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"BookStore",
								"v1",
								"Book"
							]
						}
					},
					"response": []
				},
				{
					"name": "9999-User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/Account/v1/User/{{userID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"Account",
								"v1",
								"User",
								"{{userID}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"",
					"",
					"// pm.sendRequest(\"{{baseURL}}/Account/v1/User/{{userID}}\", function (err, response) {",
					"//     console.log(response.json());",
					"// });",
					"",
					"",
					"",
					"",
					"",
					"// pm.globals.set(\"userID\", \"variable_value\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"",
					"pm.test(\"Status code is in 200 range\", function () {",
					"  pm.expect(pm.response.code).to.be.oneOf([200, 201,202, 203,204])",
					"});",
					"",
					"if (pm.request.method !== \"DELETE\") {",
					"pm.test(\"Verify response headers are present \", () => {",
					"    pm.response.to.have.header(\"Date\");",
					"    pm.response.to.have.header(\"Content-Length\");",
					"    pm.response.to.have.header(\"Content-Type\");",
					"});",
					"",
					"pm.test(\"Verify Content-Type header\", () => {",
					"   pm.expect(pm.response).to.include.header(\"Content-Type\");",
					"   pm.expect(pm.response).to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
					"});",
					"}",
					"",
					"",
					"pm.test(\"API response contains the expected fields\", () => {",
					"  // const response = pm.response.json();",
					"  // pm.expect(response).to.have.property(\"id\", 2);",
					"  pm.response.to.not.be.error;",
					"  pm.response.to.have.jsonBody(true);",
					"});",
					"",
					"pm.test(\"API response time below 1 second\", () => {",
					"    var limit = 1000; // ms",
					"    pm.expect(pm.response.responseTime).to.be.below(limit); ",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://demoqa.com"
		}
	]
}